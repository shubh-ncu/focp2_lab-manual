Q1. Create a program that reads a user’s name and age, then outputs: “Hello [name], you are [age] years old!”
#include<iostream>
using namespace std;
int main()
{
	char SN[50];
 	cout<<"Enter Name: ";
 	cin.getline(SN,50);
	int age;
	cout<<"enter your age: ";
	cin>>age;
	cout<<"Hello "<< SN <<" you are "<< age <<" year old";
}
Q2. Write a program to take two integers as input and display their sum.
#include<iostream>
using namespace std;
int main()
{
	int a,b;
	cout<<"enter 2 number: ";
	cin>>a>>b;
	cout<<"sum: "<<a+b;
}
Q3. Ask  the user to input two numbers and a mathematical operator (+,-,/,*) and display the result the operation. Eg 3*4 output 12(Hint: use switch case)
#include<iostream>
using namespace std;
int main()
{
	int a,b,choice;
	cout<<"enter 2 numbers: ";
	cin>>a>>b;
	cout<<"enter your choice";
	cin>>choice;
	switch(choice)
	{
		case 1:
			cout<<"+"<<a+b;
			break;
	    case 2:
	    	cout<<"-"<<a-b;
	    	break;
	    case 3:
	    	cout<<"*"<<a*b;
	    	break;
	    case 4:
	    	cout<<"/"<<a/b;
	    	break;
	    default:
	    	cout<<"invalid";
		
	}
}
Q4. Take two floating-point numbers as input and display their division result with two decimal places.
#include<iostream>
#include<iomanip>
using namespace std;
int main()
{
	float a,b;
	cout<<"Enter 2 number: ";
	cin>>a>>b;
	float c=a/b;
	cout<<c<<setprecision(2);
	return 0;
}
Q5.Write a program that calculates that compounds interest for a given principal amount, rate of interest, and time period using constants and user input for variables.
#include <iostream>
#include <cmath>
using namespace std;

int main() 
{
    const double Ir = 0.05; 
    double pA, rOI, cI;
    int Tp; 
    cout << "Enter the principal amount: ";
    cin >> pA;
    cout << "Enter the rate of interest (in percentage): ";
    cin >> rOI;
    cout << "Enter the time period (in years): ";
    cin >> Tp;
    rOI = rOI / 100;
    cI = pA * pow((1 + rOI), Tp) - pA;
    cout << "The compound interest is: " << cI << endl;
    return 0;
}
Q6. Write a program that calculates the area and perimeter of a rectangle using-provided length and width. Use constant where necessary.
#include<iostream>
using namespace std;
int main()
{
	int l,b;
	cout<<"Enter length: ";
	cin>>l;
	cout<<"enter width: ";
	cin>>b;
	cout<<"area of rectangle: "<<l*b<<endl;
	cout<<"perimeter of rectangle: "<<2*(l+b);
	
}
Q7. Write a program to swap two numbers using a temporary variables and then without temporary variables.
#include<iostream>
using namespace std;

int main()
{
	int a,b,c;
	cout<<"enter two number: ";
	cin>>a>>b;
	
	c=a;
	a=b;
	b=c;
	
	cout<<"After Swapping: "<<a<<endl<<b<<endl;
	return 0;
}
Q8. Write a program that takes the user’s full name and age as input and display a greeting with the name and the number of days they have lived.
#include <iostream>
#include <string>
using namespace std;
int main() 
{
    string fullName;
    int age;
    cout << "Enter your full name: ";
    getline(cin, fullName);
    cout << "Enter your age: ";
    cin >> age;
    int daysLived = age * 365;

    cout<<"\nHello, "<<fullName<<"!"<<endl;
    cout<<"You have lived approximately "<<daysLived<<" days."<<endl;

    return 0;
}
Q9. Create a program that take three inputs: a character, an integer, and a floating-point number. Display them in a formatted table.
#include <iostream>
#include <iomanip>
using namespace std;

int main() {
    char c;
    int a,b;
    float f;

    cout << "Enter a character: ";
    cin >> c;
    cout << "Enter the first integer: ";
    cin >> a;
    cout << "Enter the second integer: ";
    cin >> b;
    cout << "Enter a floating-point number: ";
    cin >> f;

    cout << "\nFormatted Table:\n";
    cout << left << setw(12) << "Character" 
         << setw(12) << "Integer 1" 
         << setw(12) << "Integer 2" 
         << setw(12) << "Float" 
         << endl;
    
    cout << left << setw(12) << c 
         << setw(12) << a
         << setw(12) << b
         << setw(12) << fixed << setprecision(2) << f 
         << endl;

    return 0;
}
Q10. Create a program that takes two integers as input and determines if the first is the multiple of the second using relational and logical operators.
#include <iostream>
using namespace std;
int main() 
{
    int num1,num2;
    cout<<"Enter the first integer: ";
    cin>>num1;

    cout<<"Enter the second integer: ";
    cin>>num2;
    if (num2!=0) 
	{
    if (num1%num2==0) 
	{
        cout<<num1<<" is a multiple of "<<num2<<"."<<endl;
    } else 
	{
        cout<<num1<<" is not a multiple of "<<num2<<"."<<endl;
    }
    }
	 else 
	{
        cout<<"The second number cannot be zero."<<endl;
    }
    return 0;
}
Q11. Create a program to count the number of 1 bits in an integer input by the user.
#include <iostream>
using namespace std;
int main() 
{
    int num,count=0;
    cout<<"Enter an integer: ";
    cin>>num;
    while (num!=0) 
	{
        count+=num&1;
        num>>=1;
    }
    cout<<"Number of 1 bits: "<<count<<endl;
    return 0;
}
Q12. Write a program that solves a quadratic equation (ax^2+bx+c=0) using conditional statements to handle all possible cases(real and distinct roots, real and equal roots, complex roots).
#include <iostream>
#include <cmath>
using namespace std;

int main() {
    
    double a, b, c;

    cout << "Enter coefficient a: ";
    cin >> a;
    cout << "Enter coefficient b: ";
    cin >> b;
    cout << "Enter coefficient c: ";
    cin >> c;

    if (a == 0) {
        cout << "This is not a quadratic equation (a cannot be 0)." << endl;
        return 0;
    }

    double discriminant = b * b - 4 * a * c;

    if (discriminant > 0) {
       
        double root1 = (-b + sqrt(discriminant)) / (2 * a);
        double root2 = (-b - sqrt(discriminant)) / (2 * a);
        cout << "The roots are real and distinct." << endl;
        cout << "Root 1 = " << root1 << endl;
        cout << "Root 2 = " << root2 << endl;
    } else if (discriminant == 0) {
       
        double root = -b / (2 * a);
        cout << "The roots are real and equal." << endl;
        cout << "Root = " << root << endl;
    } else {

        double realPart = -b / (2 * a);
        double imaginaryPart = sqrt(-discriminant) / (2 * a);
        cout << "The roots are complex." << endl;
        cout << "Root 1 = " << realPart << " + " << imaginaryPart << "i" << endl;
        cout << "Root 2 = " << realPart << " - " << imaginaryPart << "i" << endl;
    }

    return 0;
}
Q13. Create a program to simulate an ATM machine using a switch statement. Include options for withdrawal , deposit, balance inquiry, and exit, with error handling for invalid input and insufficient balance.

Q14. develop a program that checks if a triangle is valid based on the length of its sides and determines its types (equilateral, isosceles, or scalene) using nested if statements.
#include <iostream>
using namespace std;

int main() {
    double side1, side2, side3;

    cout << "Enter the length of side 1: ";
    cin >> side1;
    cout << "Enter the length of side 2: ";
    cin >> side2;
    cout << "Enter the length of side 3: ";
    cin >> side3;

    if (side1 <= 0 || side2 <= 0 || side3 <= 0) {
        cout << "The sides of a triangle must be greater than 0.\n";
    } else if (side1 + side2 > side3 && side1 + side3 > side2 && side2 + side3 > side1) {
        if (side1 == side2 && side2 == side3) {
            cout << "The triangle is equilateral.\n";
        } else if (side1 == side2 || side2 == side3 || side1 == side3) {
            cout << "The triangle is isosceles.\n";
        } else {
            cout << "The triangle is scalene.\n";
        }
    } else {
        cout << "The sides do not form a valid triangle.\n";
    }

    return 0;
}
Q15. Write a program to evaluate (a^b + c&d) where a, b, c, and d are user inputs. Explain the precedence of bitwise operators in the program.
#include <iostream>
using namespace std;

int main() {
    int a, b, c, d;

    cout << "Enter value for a: ";
    cin >> a;
    cout << "Enter value for b: ";
    cin >> b;
    cout << "Enter value for c: ";
    cin >> c;
    cout << "Enter value for d: ";
    cin >> d;

    int result = (a ^ b) + (c & d);

    cout << "Result of (a^b + c&d) = " << result << endl;

    return 0;
}
